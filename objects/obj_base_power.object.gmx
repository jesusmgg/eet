<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables

tile_x = 0;
tile_y = 0;

cost = 0.0;
pollution = 0;
power_generated = 0;
dislike_range = 0;
range = 0;
connection_range = 0;

connected = false;
connection_update_delay = 10;
current_connection_update_delay = connection_update_delay;

game_controller = noone;

initialized = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Try to connect to nearby objects

if (connection_range &gt; 0 &amp;&amp; current_connection_update_delay &lt;= 0)
{
    var start_x = tile_x - connection_range;
    var start_y = tile_y - connection_range;
    var end_x = tile_x + connection_range;
    var end_y = tile_y + connection_range;
    
    for (var i=start_x; i&lt;=end_x; i++)
    {
        for (var j=start_y; j&lt;=end_y; j++)
        {
            var object = instance_position(i*32, j*32, obj_base_power);
                        
            if (object)
            {
                if (object_index == obj_node_low)
                {
                    var line_width = 1;
                    if (object.object_index != obj_node_low
                        &amp;&amp; object.object_index != obj_substation)
                    {
                        break;
                    }
                }
                else if (object_index == obj_node_high)
                {
                    var line_width = 2;
                    if (object.object_index == obj_node_low)
                    {
                        break;
                    }
                }
            
                if (connected)
                {
                    object.connected = true;
                    
                    var pos_x = tile_x * 32 + 15;
                    var pos_y = tile_y * 32 + 15;
                    var obj_x = object.x + 15;
                    var obj_y = object.y + 15;
                    draw_set_colour(c_black);
                    draw_line_width(pos_x, pos_y, obj_x, obj_y, line_width);
                }
                else
                {                    
                    connected = object.connected;
                }
            }
        }
    }
    
    current_connetion_update_delay = connection_update_delay;
}

current_connection_update_delay--;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
