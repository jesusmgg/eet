<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_selection_white</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

game_controller = noone;

extra_sprite = noone;
bound_object = noone;

tile_x = 0;
tile_y = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Follow mouse and snap to tiles

tile_x = floor(mouse_x/32);
tile_y = floor(mouse_y/32);

x = tile_x * 32;
y = tile_y * 32;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Unbind object to create

bound_object = noone;
extra_sprite = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Build bound object

if (bound_object)
{
    var tile_status = ds_grid_get(game_controller.grid_occupation, tile_x, tile_y);
    if (tile_status == game_controller.TILE_FREE)
    {
        var object = instance_create(tile_x*32, tile_y*32, bound_object);
        ds_grid_set(
            game_controller.grid_occupation, 
            tile_x, tile_y, 
            game_controller.TILE_OCCUPIED
        );
        
        object.game_controller = game_controller;
        object.tile_x = tile_x;
        object.tile_y = tile_y;
        
        audio_play_sound(snd_button_1, 10, false);
    }
}

if (bound_object != obj_node_low &amp;&amp; bound_object != obj_node_high)
{
    bound_object = noone;
    extra_sprite = noone;
}
else if (bound_object == obj_node_low 
         &amp;&amp; game_controller.stats_money &lt; game_controller.NODE_LOW_COST)
{
    bound_object = noone;
    extra_sprite = noone;
    show_popup("Not enough money", 3);
    audio_play_sound(snd_error, 10, false);
}
else if (bound_object == obj_node_high 
         &amp;&amp; game_controller.stats_money &lt; game_controller.NODE_HIGH_COST)
{
    bound_object = noone;
    extra_sprite = noone;
    show_popup("Not enough money", 3);
    audio_play_sound(snd_error, 10, false);
}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw extra sprite and color

if (extra_sprite)
{
    draw_sprite_ext(extra_sprite, 0, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
    
    var tile_status = ds_grid_get(game_controller.grid_occupation, tile_x, tile_y);
    if (tile_status == game_controller.TILE_FREE) {sprite_index = spr_selection_green;}
    else {sprite_index = spr_selection_red;}
    
    if (bound_object)
    {
        var connection_range = 0;
        if (bound_object == obj_node_low)
        {
            connection_range = game_controller.NODE_LOW_CONNECTION_RANGE;
        }
        if (bound_object == obj_node_high)
        {
            connection_range = game_controller.NODE_HIGH_CONNECTION_RANGE;
        }
        
        if (connection_range &gt; 0)
        {
            var start_x = tile_x - connection_range;
            var start_y = tile_y - connection_range;
            var end_x = tile_x + connection_range;
            var end_y = tile_y + connection_range;
            
            for (var i=start_x; i&lt;=end_x; i++)
            {
                for (var j=start_y; j&lt;=end_y; j++)
                {
                    var object = instance_position(i*32, j*32, obj_base_power);
                                
                    if (object)
                    {
                        if (bound_object == obj_node_low)
                        {                        
                            var line_width = 1;
                            if (object.object_index != obj_node_low
                                &amp;&amp; object.object_index != obj_substation)
                            {
                                break;
                            }
                        }
                        else if (bound_object == obj_node_high)
                        {                        
                            var line_width = 2;
                            if (object.object_index == obj_node_low)
                            {
                                break;
                            }
                        }
                        
                        var pos_x = tile_x * 32 + 15;
                        var pos_y = tile_y * 32 + 15;
                        var obj_x = object.x + 15;
                        var obj_y = object.y + 15;
                        draw_set_colour(c_gray);
                        draw_line_width(pos_x, pos_y, obj_x, obj_y, line_width);
                    }
                }
            }
        }
    }    
}
else
{
    sprite_index = spr_selection_white;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
